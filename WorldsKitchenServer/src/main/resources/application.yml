spring:
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 501111947017-i16mfdgv4kcdulcc45mfmm23pd9r7vrd.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "http://localhost:8080/api/oauth2/callback/google"
            scope:
              - email
              - profile
          facebook:
            clientId: 966574685076573
            clientSecret: 91342c71c9229b2312c1c75e8cfd7420
            redirectUri: "http://localhost:8080/api/oauth2/callback/facebook"
            scope:
              - email
              - public_profile
              - user_photos
      jwt:
        token:
          secret-key: my-secret-key
  datasource:
    url: jdbc:h2:mem:kitchendb
    username: user
    password: password
    driverClassName: org.h2.Driver
  jpa:
    defer-datasource-initialization: true
    generate-ddl: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
  sql:
    init:
      mode: always
app:
  oauth2:
    authorizedRedirectUris:
      - http://localhost:8080/oauth2/redirect
